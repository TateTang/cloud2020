server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务的名称进行路由
      routes:
        - id: payment_routh # 路由的id 没有规定，建议配合服务名
          uri: lb://cloud-payment-service # 路由的地址
          #          uri: http://localhost:8001 # 路由的地址
          predicates:
            - Path=/payment/get/** # 断言，路径匹配的进行路由

        - id: payment_routh2
          uri: lb://cloud-payment-service # 路由的地址
          #          uri: http://localhost:8001
          predicates:
            - Path=/payment/lb/**
            - After=2021-03-30T21:01:17.441+08:00[Asia/Shanghai] #这个时间之后访问有效果
#            - Cookie=username,tate # cookies访问
#            - Header=X-Request-Id, \d+ #请求头有X-Request-Id属性并且值为整数的正则表达式
          filters:
            - AddRequestHeader=X-Request-Id, 24 #过器工厂会在匹配的请求头加上一对请求头,名称为X-Request-Id值为24


eureka:
  instance:
    hostname: cloud-gate-service
  client:
    register-with-eureka: true # true表示向注册中心注册自己 默认true
    fetch-registry: true #是否从EurekaServer抓取已有的注册信息，默认为true,单节点无所谓,集群必须设置为true才能配合ribbon使用负载均衡
    #设置与eureka server交互的地址查询服务和注册服务都需要依赖当前地址
    service-url:
      defaultZone: http://localhost:7001/eureka/
#      defaultZone: http://eureka7001.com:7001/eureka/, http://eureka7002.com:7002/eureka/ # eureka集群中

